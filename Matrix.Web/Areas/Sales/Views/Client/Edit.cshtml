@model Matrix.DAL.ViewModels.ClientViewModel
@{
    Layout = "~/Views/Shared/_MXClientValidation.cshtml";
}
@Html.Partial("_QueryTime")

@using (Ajax.BeginForm("Edit", "Client",
    new AjaxOptions
            {
                UpdateTargetId = "divClientInfo",
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace
            }))
{   
    @Html.HiddenFor(x => x.Client.Id)   
    @Html.HiddenFor(x => x.Client.IsActive)   
    
    <table>
        <tr>
            <td>Name:</td>
            <td>@Html.EditorFor(x => x.Client.Name)
            </td>
                    
            <td>Type:</td>
            <td>
                @Html.TextBoxFor(x => x.Client.ClientType.DenormalizedName, new { id = "txtClientTypeAutoComplete" })
                @Html.HiddenFor(x => x.Client.ClientType.DenormalizedId, new { id = "hdnSelectedClientTypeId" })
                <br />
                @Html.ValidationMessageFor(x => x.Client.ClientType)
                <span style="font-size:small">
                    (Start typing for autocomplete such as 'info' or 'energy', this data is generated while setting up master data in the root page)</span>
            </td>            
        </tr>

        <tr>
            <td>Code:</td>
            <td>@Html.EditorFor(x => x.Client.Code)
            </td>
                    
            <td>Phone:</td>
            <td>@Html.EditorFor(x => x.Client.PhoneNumber)
            </td>
        </tr>

        <tr>
            <td>Website:</td>
            <td>@Html.EditorFor(x => x.Client.Website)
            </td>
                    
            <td>Address:</td>
            <td>@Html.TextAreaFor(x => x.Client.Address)
            </td>
        </tr>
    </table>
    <div>
        <br />        
        <input id="btnSubmit" name="btnSubmit" value="Save" type="submit" />

    </div>
}

<script type="text/javascript">

    $("#txtClientTypeAutoComplete").blur(function () {
        $(this).valid();
    });

    $("#txtClientTypeAutoComplete").live('input', function () {
        var content = $("#txtClientTypeAutoComplete").val();
        if (content == "") {
            $("#hdnSelectedClientTypeId").val(null);
        }
    })

    $(function () {
        $("#txtClientTypeAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Client/LoadDataForAutoComplete', type: "GET", dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Text, value: item.Value, id: item.Value };
                        }))
                    }
                })
            },

            focus: function (event, ui) {
                $("#txtClientTypeAutoComplete").val(ui.item.label);
                return false;
            },

            minLength: 3,
            autofill: true,
            select: function (event, ui) {
                $("#txtClientTypeAutoComplete").val(ui.item.label);
                $("#hdnSelectedClientTypeId").val(ui.item.value);
                event.preventDefault();
            }
        });
    });

</script>
