@{
    ViewBag.Title = "Index";
    Layout = null;//"~/Views/Shared/_Layout.cshtml";
}

<h3>Product Catalog; we have books here</h3>
<b>Note</b>: Saving a new book to MongoDB first and then to ElasticSearch. Both operations are queued(RPC way for saving into Mongo and pub/sub for ElasticSeacrh).
<br />
Do not forget to run the subscriber application at "..\Matrix.Processor\bin\Debug\Matrix.Processor.exe". If you do not see the just added book, please click the 
search button again with a search criteria. 
<br />
<br />

@using (Ajax.BeginForm("AddSampleData",
    new AjaxOptions
    {
        UpdateTargetId = "divContent",
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace
    }))
{
    if (ViewBag.ShowDummyButton != null && ViewBag.ShowDummyButton == true)
    {        
    <span>There are no books created yet</span><br />
    <input id="btnAddSampleData" name="btnAddSampleData" value="Add some books" type="submit" /><br />
    <br />
    }
    else
    {
    @Ajax.ActionLink("Create A New Book", "Create", null,
            new AjaxOptions
            {
                UpdateTargetId = "divContent",
                HttpMethod = "Get",
                InsertionMode = InsertionMode.Replace,
                LoadingElementId = "divLoading"
            }, new { @class = "nav" })<br />
    <br />
    
    <b>Searh Term : </b>
    <input type="text" id="txtSearchTerm" />
    <input type="button" id="btnSearch" value="Search" />
    <br />
        if (ViewBag.IsUsingElasticSearch == true)
        {
            <span style="font-size: 14px; color: brown;">Term Query: Search by author name, category or title. Eg. for a search term could be "coelho", "Paulo Coelho", "alchemist", "java", 
                    "rails", "java, rails" etc. A minimum of 3 charaters is required to search. Wild card searches on title are permitted, i.e. you can search for 
                "rail" instead of "rails".
            </span>
        <br />
        @Ajax.ActionLink("Switch To Mongo free text search", "Index", new { isUsingElasticSearch = false },
            new AjaxOptions
            {
                UpdateTargetId = "divContent",
                HttpMethod = "Get",
                InsertionMode = InsertionMode.Replace,
                LoadingElementId = "divLoading"
            }, new { @class = "nav" })
        }
        else
        {
            <span style="font-size: 14px; color: brown;">Search by author name, category or title. Eg. for a search term could be "coelho", "Paulo Coelho", "alchemist", "java", 
                    "rails", "java, rails" etc. Please note that MongoDB's new feature, free text search, is quite a basic one and really handy in simple term searches.
                 Comparing it with a full blown search engine would not be fair.
            </span>
        <br />
        @Ajax.ActionLink("Switch To ElasticSearch", "Index", new { isUsingElasticSearch = true },
            new AjaxOptions
            {
                UpdateTargetId = "divContent",
                HttpMethod = "Get",
                InsertionMode = InsertionMode.Replace,
                LoadingElementId = "divLoading"
            }, new { @class = "nav" })
        }

    }
}

<div id="divSearchResults">
</div>

<script type="text/javascript">

    $(function () {
        $("#divSearchResults").load("/Sales/Book/IndexSub/" + "?isUsingElasticSearch=" + '@ViewBag.IsUsingElasticSearch');

        $("#btnSearch").click(function () {
            //alert("Search term: " + $("#txtSearchTerm").val().trim());
            $("#divSearchResults").load("/Sales/Book/IndexSub/?term=" + escape($("#txtSearchTerm").val().trim())
                + "&isUsingElasticSearch=" + '@ViewBag.IsUsingElasticSearch');

        });

        //Preventing the form to post back.
        $("#txtSearchTerm").keydown(function (event) {
            if (event.keyCode == 13) {
                $("#divSearchResults").load("/Sales/Book/IndexSub/?term=" + escape($("#txtSearchTerm").val().trim())
                    + "&isUsingElasticSearch=" + '@ViewBag.IsUsingElasticSearch');
                event.preventDefault();
                return false;
            }
        });
    });
</script>
