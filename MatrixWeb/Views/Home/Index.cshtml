@{
    ViewBag.Title = "Matrix Inc.";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Welcome</h2>

@using (Html.BeginForm("Index", "Home"))
{
    if (ViewBag.ShowSetMasterData != null && ViewBag.ShowSetMasterData == true)
    { 
        <span>Master Data has not been set yet. This is important because I need some lookup data to be set prior to moving forward.</span><br /><br />
        <input id="btnSetMasterData" name="btnSetMasterData" value="Set Master Data" type="submit" /><br /><br />
    }
    
    <p>
        I'd put my stakes on NoSql for -<br />
        1) Lightening fast speed; this one being my favourite.<br />
        2) Flexibility in design; schemalessness.<br />
        3) Scalability; easy replication and sharding. Scaling horizontally even on commodity hardware being the biggest plus here; as the data grows, 
        I'll just add more machines to the node group and everything fits well.<br />
        4) The thing that I like the most, specially about document databases is it fits much closer to the object oriented design. 
        Just store your domain structure flat into the database no matter how complex the hierarchy is; this also suits me personally as I'm a great fan of storing the data flat.<br />
    </p>
}
